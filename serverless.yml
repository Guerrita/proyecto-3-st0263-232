service: weather-stream-sentiments
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  environment:
    kinesisStream: !Ref WeatherKinesisStream
    projectBucket: !Ref ProjectBucket
    weather: key
  iam:
    role:
        statements:
          - Effect: Allow
            Action:
              - kinesis:PutRecord
            Resource:
              - !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${WeatherKinesisStream}"
          - Effect: "Allow"
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:ListObjectsV2
            Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ProjectBucket" }, "/*" ] ]  }
          - Effect: "Allow"
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:ListObjectsV2
            Resource: arn:aws:s3:::proyecto-3/*

functions:
  get_data:
    handler: src/get_data.get_data
    events:
      - httpApi:
          path: /get-data
          method: get
      - schedule: cron(30 23 * * ? *)
  analyze_sentiments:
    handler: src/analyze_sentiments.analyze_sentiments
    events:
      - httpApi:
          path: /analyze-sentiments
          method: get

resources:
  Resources:
    WeatherKinesisStream:
      Type: 'AWS::Kinesis::Stream'
      Properties:
        Name: weatherKinesisStream
        ShardCount: 1
    ProjectBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: proyecto-3-data-bucket
plugins:
  - serverless-python-requirements
